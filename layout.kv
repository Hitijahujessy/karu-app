#: kivy 2.1.0
#: import WipeTransition kivy.uix.screenmanager.WipeTransition
#: import hex kivy.utils.get_color_from_hex
#: import JsonStore kivy.storage.jsonstore
#: import Clock kivy.clock.Clock
#: import data packData
#coding: -*- utf-8 -*-
<Label>:
    font_name: 'SourceHanSansHW-Bold.otf'
<Button>:
    font_name: 'SourceHanSansHW-Bold.otf'


<WindowManager>:
    transition: WipeTransition()
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    Menu:
        id: mainmenu
    GameWidget:
        id: gw
    KaruStore:
        id: ks
    SettingsScreen:
        id: settings


<Menu>:
    id: menu
    name: "first"
    orientation: 'vertical'
    size: root.width, root.height
    secondary_color: .4,.4,.4,1
    secondary_color2: (1.1 - root.main_color[0], 1.1 - root.main_color[1], 1.1 - root.main_color[2], .8)
    #gw: app.root.ids.gw
    #highscore_menu: root.label_highscore
    #wallet_menu: root.label_wallet
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size


    Button:
	    id: start_button
        text: "Start"
        font_size: 32
        on_press: app.root.ids.gw.click_button()
        on_release: app.root.ids.gw.second_color(); app.root.ids.gw.reload(); app.root.current = "second"; Clock.schedule_interval(app.root.ids.gw.countdown, .5)
        size_hint: .2, .12
        pos_hint: {"center_x": .4925, "center_y": .435}
        background_color: 0, 0, 0, 0
        canvas.after:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], .9] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: start_button.width, start_button.height
                pos: start_button.pos
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: self.width/1.5, self.height/1.5
                pos: self.center_x*.875, self.center_y*.9
                source: 'resources/icons/play.png'

    Button:
	    id: ruma_button
        text: "Karu's huis"
        font_size: 32
        on_press: app.root.ids.gw.click_button()
        on_release: app.root.current = 'third'
        size_hint: .2, .12
        pos_hint: {"center_x": .4925, "center_y": .3}
        background_color: 0, 0, 0, 0
        canvas.after:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], .9] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: ruma_button.width, ruma_button.height
                pos: ruma_button.pos
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: self.width/1.5, self.height/1.5
                pos: self.center_x*.865, self.center_y*.85
                source: 'resources/icons/shop.png'
    Button:
	    id: settings_button
        text: "Instellingen"
        font_size: 32
        on_press: app.root.ids.gw.click_button()
        on_release: app.root.current = 'fourth'
        size_hint: .2, .12
        pos_hint: {"center_x": .4925, "center_y": .165}
        background_color: 0, 0, 0, 0
        canvas.after:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], .9] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: settings_button.width, settings_button.height
                pos: settings_button.pos
            Color:
                rgba: 1,1,1,1
            RoundedRectangle:
                size: self.width/1.5, self.height/1.5
                pos: self.center_x*.865, self.center_y*.75
                source: 'resources/icons/settings.png'
    Image:
        source: root.skin
        size_hint: .75, .75
        pos_hint: {'center_x': .5, 'center_y': .8}
        canvas.before:
            Color:
                rgba: 1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], .9
            RoundedRectangle:
                size: self.width, self.height*.6
                pos: self.x, self.y*1.35
                source: 'resources/karu/logo_rect.png'

    Image:
        source: 'resources/karu/logo_txt.png'
        size_hint: .75, .75
        pos_hint: {'center_x': .5, 'center_y': .8}

    Label:
        size_hint: .5, .1
        pos_hint: {'center_x': .5, 'center_y': .6}
        canvas.before:
            Color:
                rgba: 1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], .9
            RoundedRectangle:
                size: self.size
                pos: self.pos

    Label:
        id: highscore_menu
        text: str(round(root.highscore))
        font_size: 36
        bold: True
        pos_hint: {'center_x': .55, 'center_y': .62}

    Label:
        id: wallet_menu
        text: str(round(root.wallet))
        bold: True
        pos_hint: {'center_x': .55, 'center_y': .58}

    Image:
        size_hint: .07, .07
        pos_hint: {'center_x': .45, 'center_y': .58}
        source: 'resources/icons/karucoins.png'

    Image:
        size_hint: .07, .07
        pos_hint: {'center_x': .45, 'center_y': .62}
        source: 'resources/icons/crown.png'


<LetterButton@Button>
    background_color: 0,0,0,0 # the last zero is the critical on, make invisible
    secondary_color2: 0,.7,.7,.8
    font_size: 36


<WordButton@Button>:
    text: '_'
    bold: True
    disabled: True if self.text=='_' else False
    hint: False
    font_size: 42
    color: 0, 0, 0, 0
    background_color: 0, 0, 0, 0
    background_disabled_normal: ''
    disabled_color: 0, 0, 0, 0
    charpos: app.root.ids.gw.charpos
    secondary_color: (1, 1, 1, .7)
    on_press: self.text = '_'; self.color = (0,0,0,0); app.root.ids.gw.charpos==self.charpos; app.root.ids.gw.backspace()
    on_release: self.state='down'
    size_hint: .2, .2
    canvas.before:
        Color:
            rgba: self.secondary_color
        RoundedRectangle:
            pos: (self.x, self.y*1.125)
            size: self.width, self.height*.5

#:import Factory kivy.factory.Factory
<PopupFinish@Popup>
    auto_dismiss: False
    separator_color: 0, 0, 0, 0
    background_color: 0, 0, 0, 0
    size_hint_y: .8
    size_hint_x: .9
    title: ""
    secondary_color: ((255/255), (167/255), 0, 1)
    secondary_color2: (1.1 - app.root.ids.gw.main_color[0], 1.1 - app.root.ids.gw.main_color[1], 1.1 - app.root.ids.gw.main_color[2], .8)
    gw: app.root.ids.gw


    on_open: app.root.ids.gw.count_coins_anim(self.ids.karucoin); app.root.ids.gw.new_best_sound() if app.root.ids.gw.broke_record==True else print(''); app.root.ids.gw.unlock_notification(self.ids.notification, self.ids.notification2)

    FloatLayout:
        size: app.root.size

        Label:
            font_size: 48
            pos_hint: {'center_x':.375, 'y':.52}
            canvas.before:
                Color:
                    rgba: 1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1
                RoundedRectangle:
                    pos: self.pos
                    size: self.width*1.25, self.height*.85
                    source: "resources/icons/banner.png"

        Label:
            text: str(root.gw.highscore)
            font_size: 48
            pos_hint: {'center_x':.5, 'y':.495}
            canvas.after:
                Color:
                Color:
                    rgba: 1,1,1,1
                RoundedRectangle:
                    size: self.width*.1, self.height*.0625
                    pos: self.x*5.5, self.y*1.7979
                    source: 'resources/icons/crown.png'
        Label:
            text: "New Best!" if root.gw.broke_record==True else "Score:"
            valign: 'middle'
            font_size: 42
            pos_hint: {'center_x':.5, 'y':.255}
        Image:
            source:'resources/icons/crown.png'
            pos_hint: {'center_x':.5, 'y':.75}
            size_hint: .12, .125
            opacity: 1 if root.gw.broke_record==True else 0
        Label:
            text: ' {}   >   {}'.format(root.gw.old_highscore, root.gw.highscore) if root.gw.broke_record==True else " {}".format(root.gw.score)
            valign: 'middle'
            font_size: 57
            pos_hint: {'center_x':.475, 'y':.18}
        Label:
            text: '{}'.format(root.gw.new_wallet)
            font_size: 57
            valign: 'middle'
            pos_hint: {'center_x':.5, 'y':.0625}
        Image:
            id: karucoin
            size_hint: .08, .08
            pos_hint: {'center_x': .875, 'y': 1.07}
            source: 'resources/icons/karucoin_single.png'
            opacity: 0
        Button:
            text: ''
            on_press: root.gw.click_button()
            on_release:  root.gw.reload(); Clock.schedule_interval(app.root.ids.gw.countdown, .5); root.dismiss()
            font_size: 32
            size_hint: .2, .12
            pos_hint: {'center_x':.5, 'y':.25}
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: [1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1] if self.state=='normal' else root.secondary_color2
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                Color:
                    rgba: 1,1,1,.8
                RoundedRectangle:
                    size: self.width/1.2, self.height/1.2
                    pos: self.width/.387, self.height/.285
                    source: 'resources/icons/reload.png'
        Button:
            on_press: root.gw.click_button()
            on_release: root.gw.reload(); root.dismiss(); app.root.current = 'first'
            size_hint: .2, .12
            pos_hint: {'center_x':.5, 'y':.05}
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: [1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1] if self.state=='normal' else root.secondary_color2
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                Color:
                    rgba: 1,1,1,.8
                RoundedRectangle:
                    size: self.width/1.2, self.height/1.2
                    pos: self.width/.387, self.height/.545
                    source: 'resources/icons/home.png'

        Label:
            id: notification
            text: '\nYou unlocked a new theme!'
            valign: 'middle'
            font_size: 27
            color: 0, 0, 0, 1
            pos_hint: {'center_x':.5, 'y':.75}
            canvas.before:
                Color:
                    rgba: 1, 1, 1, .8
                RoundedRectangle:
                    size: self.width, self.height*.125
                    pos: self.x, self.y*1.5
                Color:
                    rgba: 1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1
                RoundedRectangle:
                    size: self.width/8, self.height/12
                    pos: self.x*1.225, self.y*1.525
                    source: 'resources/icons/theme.png'

        Label:
            id: notification2
            text: '\nYou unlocked a new skin!'
            valign: 'middle'
            font_size: 27
            color: 0, 0, 0, 1
            pos_hint: {'center_x':.5, 'y':.75}
            canvas.before:
                Color:
                    rgba: 1, 1, 1, .8
                RoundedRectangle:
                    size: self.width, self.height*.125
                    pos: self.x, self.y*1.5
                Color:
                    rgba: 1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1
                RoundedRectangle:
                    size: self.width/8, self.height/12
                    pos: self.x*1.225, self.y*1.525
                    source: 'resources/icons/skins.png'


<PopupPause@Popup>
    auto_dismiss: False
    size_hint_y: .8
    size_hint_x: .9
    title: ""
    separator_color: [1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], .75]
    gw: app.root.ids.gw
    main_color: self.gw.main_color
    secondary_color2: (1.1 - app.root.ids.gw.main_color[0], 1.1 - app.root.ids.gw.main_color[1], 1.1 - app.root.ids.gw.main_color[2], .8)

    FloatLayout:
        Label:
            text: f"Level %d/10" % (app.root.ids.gw.level + 1)
            bold: True
            font_size: 36
            size_hint: .9, .25
            pos_hint: {'x':.05, 'y':.70}
            canvas.before:
                RoundedRectangle:
                    size: root.size
                    pos: root.pos

        Button:
            on_press: root.gw.click_button(); root.gw.early_stop = True
            on_release: root.gw.stop_game(); root.dismiss(); app.root.current = 'first'#; app.root.ids.mainmenu.highscore_menu.text = str(root.gw.highscore); app.root.ids.mainmenu.wallet_menu.text = str(root.gw.wallet)
            font_size: 32
            size_hint: .2, .12
            pos_hint: {'center_x': .5, 'y':.25}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: [1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1] if self.state=='normal' else root.secondary_color2
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                Color:
                    rgba: 1,1,1,1
                RoundedRectangle:
                    size: self.width/1.2, self.height/1.2
                    pos: self.center_x*.86, self.y*1.0325
                    source: 'resources/icons/home.png'
        Button:
            text: ''
            on_press: root.gw.click_button(); root.gw.game_pause = False
            on_release:  root.dismiss(); root.gw.pause_time()
            font_size: 32
            size_hint: .2, .12
            pos_hint: {'center_x': .5, 'y':.4}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: [1 - app.root.ids.gw.main_color[0], 1 - app.root.ids.gw.main_color[1], 1 - app.root.ids.gw.main_color[2], 1] if self.state=='normal' else root.secondary_color2
                RoundedRectangle:
                    size: self.size
                    pos: self.pos
                Color:
                    rgba: 1,1,1,1
                RoundedRectangle:
                    size: self.width/1.5, self.height/1.5
                    pos: self.center_x*.89, self.y*1.035
                    source: 'resources/icons/play.png'


<BackgroundButton@ToggleButton>:
    group: 'bg_buttons'
    text: ''
    bold: True
    background_color: 0, 0, 0, 0
    backgroundnumber: 1
    disabled: True if self.state=='down' else False
    size_hint_x: .5
    size_hint_y: None
    height: 180

    canvas.before:
        Color:
            rgba: (1,1,1,1)# if self.state=='normal' else (1,1,1,.4)
        RoundedRectangle:
            size: self.width, self.height
            pos: self.pos
            source: ('resources/backgrounds/wallpaper%s.png' % self.backgroundnumber) if self.backgroundnumber > 1 else 'resources/backgrounds/wallpaper.png'
    canvas.after:
        Color:
            rgba: (0, 0, 0, 0) if self.state=='normal' else (1,1,1,1)
        Line:
            width: 3
            rectangle: self.x, self.y, self.width, self.height
#        RoundedRectangle:
#            size: self.width, self.height
#            pos: self.pos


    Button:
        id: lock_button
        on_press: print('Locked')
        size: root.size
        pos: root.pos
        background_color: 0, 0, 0, 0
        canvas.after:
            Color:
                rgba: (0, 0, 0, .75)
            RoundedRectangle:
                size: self.width, self.height
                pos: self.pos


    Image:
        id: lock_img
        pos: root.x+5, root.center_y+40
        size: 40, 40
        source: 'resources/icons/padlock.png'


<BuyButton@Button>:
    text: ' 250'
    bold: True
    background_color: 0, 0, 0, 0
    backgroundnumber_buy: 1
    #on_press: print(self.backgroundnumber_buy)
    size_hint_y: None
    height: 80


    canvas.before:
        Color:
            rgba: ([1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], .9]) if self.state=='normal' else (0,.7,.7,1)
        RoundedRectangle:
            size: self.width, self.height
            pos: self.pos
    Image:
        id: coin_icon
        source: 'resources/icons/karucoin_single.png' if self.disabled==False else 'resources/icons/check.png'
        size: 50, 50
        pos: (root.x+10, root.y+15) if self.disabled==False else (root.x+50, root.y+12.5)
        pos_hint: {'x':1, 'y':1}

<BgBar@ProgressBar>:
    text: 'tddnsj'
    max: 5
    value: 1
    size_hint: .4, .5
    Label:
        id: bar_label
        text: ''
        font_size: 24

        canvas.before:
            Color:
                rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
            BorderImage:
                border: (12, 12, 12, 12)
                pos: root.x, root.center_y - 12
                size: root.width, 18
                #source: 'blue.png'
            Color:
                rgba: app.root.ids.mainmenu.main_color
            BorderImage:
                border: [int(min(root.width * (root.value / float(root.max)) if root.max else 0, 12))] * 4
                pos: root.x, root.center_y - 12
                size: root.width * (root.value / float(root.max)) if root.max else 0, 18



#: import Clock kivy.clock.Clock
<PopupBg>:
    id: popupbg
    title: '\n{}'.format(self.wallet)
    title_align: "center"
    title_size: 46
    size_hint_y: .65
    size_hint_x: .8
    separator_color: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], .75]
    background_color: .7, .7, .7, .2#[1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
    overlay_color: 0, 0, 0, 0
    size_hint_y: .8
    size_hint_x: .9
    secondary_color: 1, (167/255), 0, 1
    secondary_color2: 0,.7,.7,1
    gw: app.root.ids.gw
    on_open: app.root.ids.mainmenu.second_color()

    canvas.before:
        Color:
            rgba: 0, 0, 0, .75
        Rectangle:
            size: app.root.size
            pos: app.root.pos
        Color:
            rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
        RoundedRectangle:
            size: self.size
            pos: self.pos
        Color:
            rgba: 1, 1, 1, 1
        RoundedRectangle:
            size: self.width*.125, self.height*.075
            pos: self.x*8.75, self.y*8.25
            source: "resources/icons/karucoins.png"



<PopupPacks>:
    id: popuppacks
    size_hint_y: .5
    size_hint_x: .8
    ks: app.root.ids.ks
    title: ''
    title_size: 46
    separator_color: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], .75]
    background_color: .7, .7, .7, .2
    overlay_color: 0, 0, 0, 0

    canvas.before:
        Color:
            rgba: 0, 0, 0, .75
        Rectangle:
            size: app.root.size
            pos: app.root.pos
        Color:
            rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
        RoundedRectangle:
            size: self.size
            pos: self.pos

    FloatLayout:
        size_hint: .25, .6
        pos_hint: {"x": 1, "y": .35}

        Button:
            id: house_icon
            on_press: house_pack.state = "down"; root.current_pack="resources/packs/huis/wordlist_house.csv" ; root.pack_switch()
            size_hint: .35, .5
            pos_hint: {"center_x": .25, "y": .5}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (1, 1, 1, 1)
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "resources/icons/house_pack_icon.png"
        Button:
            id: animal_icon
            disabled: False if root.ids.animal_unlock.value==root.ids.animal_unlock.max else True
            pos_hint: {"center_x": .75, "y": .5}
            on_press: animal_pack.state = "down"; root.current_pack="resources/packs/dieren/wordlist_animals.csv" ; root.pack_switch()
            size_hint: .35, .5
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (1, 1, 1, 1) if self.disabled==False else (.8, .8, .8, .5)
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "resources/icons/animal_pack_icon.png"
        CheckBox:
            id: house_pack
            group: "packs"
            background_radio_normal: "resources/icons/check_inactive.png"
            background_radio_down: "resources/icons/check_active.png"
            color: app.root.ids.mainmenu.main_color[0], app.root.ids.mainmenu.main_color[1], app.root.ids.mainmenu.main_color[2], .9
            on_press: root.current_pack="resources/packs/huis/wordlist_house.csv" ; root.pack_switch()
            state: "down" if root.current_pack=="resources/packs/huis/wordlist_house.csv" else "normal"
            size_hint: .2, .2
            pos_hint: {"center_x": .25, "center_y": .35}

        CheckBox:
            id: animal_pack
            group: "packs"
            background_radio_normal: "resources/icons/check_inactive.png"
            background_radio_down: "resources/icons/check_active.png"
            background_radio_disabled_normal: "resources/icons/check_inactive.png"
            color: [app.root.ids.mainmenu.main_color[0], app.root.ids.mainmenu.main_color[1], app.root.ids.mainmenu.main_color[2], .9] if self.disabled==False else [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
            disabled: False if root.ids.animal_unlock.value==root.ids.animal_unlock.max else True
            on_press: root.current_pack="resources/packs/dieren/wordlist_animals.csv" ; root.pack_switch()
            state: "down" if root.current_pack=="resources/packs/dieren/wordlist_animals.csv" else "normal"
            size_hint: .2, .2
            pos_hint: {"center_x": .75, "center_y": .35}
        ProgressBar:
            id: animal_unlock
            max: 35
            value: app.root.ids.gw.correct_words
            size_hint: .4, .5
            pos_hint: {"center_x": .75, "center_y": .2}
            canvas.after:
                Color:
                    rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
                BorderImage:
                    border: (12, 12, 12, 12)
                    pos: self.x, self.center_y - 12
                    size: self.width, 18
                    #source: 'blue.png'
                Color:
                    rgba: app.root.ids.mainmenu.main_color
                BorderImage:
                    border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 12))] * 4
                    pos: self.x, self.center_y - 12
                    size: self.width * (self.value / float(self.max)) if self.max else 0, 18
                    #source: 'red.png'
        Label:
            text: "{}/{}".format(animal_unlock.value, animal_unlock.max)
            font_size: 24
            pos_hint: {"center_x": .75, "center_y": .1}



<PopupSkins>:
    id: popupskins
    size_hint_y: .6
    size_hint_x: .8
    ks: app.root.ids.ks
    title: ''
    title_size: 46
    separator_color: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], .75]
    background_color: .7, .7, .7, .2
    overlay_color: 0, 0, 0, 0
    on_dismiss: app.root.ids.mainmenu.check_skin()

    default_skin: default_skin.__self__
    default_skin2: default_skin2.__self__
    sunglasses_skin: sunglasses_skin.__self__
    sunglasses_skin2: sunglasses_skin2.__self__
    sunglasses_unlock: sunglasses_unlock.__self__
    clown_skin: clown_skin.__self__
    clown_skin2: clown_skin2.__self__
    clown_unlock: clown_unlock.__self__

    canvas.before:
        Color:
            rgba: 0, 0, 0, .75
        Rectangle:
            size: app.root.size
            pos: app.root.pos
        Color:
            rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
        RoundedRectangle:
            size: self.size
            pos: self.pos
#    ScrollView:
#        do_scroll_x: False
#        do_scroll_y: True
    FloatLayout:
        pos_hint: {'x': .75, 'center_y': .475}
        Button:
            id: default_skin
            on_press: default_skin2.state = "down"; root.current_skin="resources/skins/default.png" ; root.skin_switch()
            size_hint: .35, .25
            pos_hint: {"center_x": .25, "y": .725}
            background_color: 0, 0, 0, 0
            canvas.before:
                Color:
                    rgba: (1, 1, 1, 1)
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "resources/skins/default_ico.png"
        Button:
            id: sunglasses_skin
            disabled: False if root.ids.sunglasses_unlock.value==root.ids.sunglasses_unlock.max else True
            pos_hint: {"center_x": .75, "y": .725}
            on_press: sunglasses_skin2.state = "down"; root.current_skin="resources/skins/sunglasses.png"; root.skin_switch()
            size_hint: .35, .25
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: (1, 1, 1, 1) if self.disabled==False else (.8, .8, .8, .5)
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "resources/skins/sunglasses_ico.png"
        CheckBox:
            id: default_skin2
            group: "skins"
            background_radio_normal: "resources/icons/check_inactive.png"
            background_radio_down: "resources/icons/check_active.png"
            color: app.root.ids.mainmenu.main_color[0], app.root.ids.mainmenu.main_color[1], app.root.ids.mainmenu.main_color[2], .9
            on_press: root.current_skin="resources/skins/default.png" ; root.skin_switch()
            state: "down" if root.current_skin=="resources/skins/default.png" else "normal"
            size_hint: .2, .2
            pos_hint: {"center_x": .25, "center_y": .65}

        CheckBox:
            id: sunglasses_skin2
            group: "skins"
            background_radio_normal: "resources/icons/check_inactive.png"
            background_radio_down: "resources/icons/check_active.png"
            background_radio_disabled_normal: "resources/icons/check_inactive.png"
            color: [app.root.ids.mainmenu.main_color[0], app.root.ids.mainmenu.main_color[1], app.root.ids.mainmenu.main_color[2], .9] if self.disabled==False else [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
            disabled: False if root.ids.sunglasses_unlock.value==root.ids.sunglasses_unlock.max else True
            on_press: root.current_skin="resources/skins/sunglasses.png"; root.skin_switch()
            state: "down" if root.current_skin=="resources/skins/sunglasses.png" else "normal"
            size_hint: .2, .2
            pos_hint: {"center_x": .75, "center_y": .65}
        Label:
            text: ''
        ProgressBar:
            id: sunglasses_unlock
            max: 125
            value: app.root.ids.gw.correct_words
            size_hint: .4, .5
            pos_hint: {"center_x": .75, "center_y": .575}
            canvas.after:
                Color:
                    rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
                BorderImage:
                    border: (12, 12, 12, 12)
                    pos: self.x, self.center_y - 12
                    size: self.width, 18
                Color:
                    rgba: app.root.ids.mainmenu.main_color
                BorderImage:
                    border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 12))] * 4
                    pos: self.x, self.center_y - 12
                    size: self.width * (self.value / float(self.max)) if self.max else 0, 18
        Label:
            text: "{}/{}".format(sunglasses_unlock.value, sunglasses_unlock.max)
            font_size: 24
            pos_hint: {"center_x": .75, "center_y": .525}
        Button:
            id: clown_skin
            disabled: False if root.ids.clown_unlock.value==root.ids.clown_unlock.max else True
            size_hint: .4, .3
            pos_hint: {"center_x": .25, "y": .25}
            on_press: clown_skin2.state = "down"; root.current_skin="resources/skins/clown.png"; root.skin_switch()
            background_color: 0, 0, 0, 0
            canvas.after:
                Color:
                    rgba: (1, 1, 1, 1) if self.disabled==False else (.8, .8, .8, .5)
                Rectangle:
                    pos: self.pos
                    size: self.size
                    source: "resources/skins/clown_ico.png"
        CheckBox:
            id: clown_skin2
            group: "skins"
            background_radio_normal: "resources/icons/check_inactive.png"
            background_radio_down: "resources/icons/check_active.png"
            background_radio_disabled_normal: "resources/icons/check_inactive.png"
            color: [app.root.ids.mainmenu.main_color[0], app.root.ids.mainmenu.main_color[1], app.root.ids.mainmenu.main_color[2], .9] if self.disabled==False else [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
            disabled: False if root.ids.clown_unlock.value==root.ids.clown_unlock.max else True
            on_press: root.current_skin="resources/skins/clown.png"; root.skin_switch()
            state: "down" if root.current_skin=="resources/skins/clown.png" else "normal"
            size_hint: .2, .2
            pos_hint: {"center_x": .25, "y": .1}
        ProgressBar:
            id: clown_unlock
            max: 75
            value: app.root.ids.gw.correct_words
            size_hint: .4, .5
            pos_hint: {"center_x": .25, "center_y": .125}
            canvas.after:
                Color:
                    rgba: [1 - app.root.ids.mainmenu.main_color[0], 1 - app.root.ids.mainmenu.main_color[1], 1 - app.root.ids.mainmenu.main_color[2], 1]
                BorderImage:
                    border: (12, 12, 12, 12)
                    pos: self.x, self.center_y - 12
                    size: self.width, 18
                Color:
                    rgba: app.root.ids.mainmenu.main_color
                BorderImage:
                    border: [int(min(self.width * (self.value / float(self.max)) if self.max else 0, 12))] * 4
                    pos: self.x, self.center_y - 12
                    size: self.width * (self.value / float(self.max)) if self.max else 0, 18
        Label:
            text: "{}/{}".format(clown_unlock.value, clown_unlock.max)
            font_size: 24
            pos_hint: {"center_x": .25, "center_y": .075}


<GameWidget>:

    size: root.size
    pos: root.pos
    bg: self.bg
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
            source: self.bg

    name: "second"

    letter_btn1: letter_btn1
    letter_btn2: letter_btn2
    letter_btn3: letter_btn3
    letter_btn4: letter_btn4
    letter_btn5: letter_btn5
    letter_btn6: letter_btn6
    letter_btn7: letter_btn7
    letter_btn8: letter_btn8
    letter_btn9: letter_btn9
    letter_btn10: letter_btn10
    letter_btn11: letter_btn11
    letter_btn12: letter_btn12
    letter_btn13: letter_btn13
    letter_btn14: letter_btn14
    letter_btn15: letter_btn15
    letter_btn16: letter_btn16
    letter_btn17: letter_btn17
    letter_btn18: letter_btn18

    i: 0

    id: AmbonWidget
    main_color: AmbonWidget.main_color
    secondary_color: (1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .8)
    secondary_color2: (1.1 - AmbonWidget.main_color[0], 1.1 - AmbonWidget.main_color[1], 1.1 - AmbonWidget.main_color[2], .8)#0,.7,.7,1

    highscore_label: highscore_label.__self__
    wallet_label: wallet_label.__self__
    image_widget: image_widget.__self__
    origin_label: origin_label.__self__
    pass_button: pass_button.__self__
    next_button: next_button.__self__
    help_button: help_button.__self__
    sound_button: sound_button.__self__
    cd_label: cd_label.__self__
    menupop: menupop.__self__
    sound_button: sound_button.__self__
    sound_amount: sound_amount.__self__
    help_button: help_button.__self__
    help_amount: help_amount.__self__
    pass_button: pass_button.__self__
    score_label: score_label.__self__
    highscore_label: highscore_label.__self__
    wallet_label: wallet_label.__self__
    coin_icon: coin_icon.__self__
    crown_icon: crown_icon.__self__




    Label:
        id: score_label
        pos_hint: {'x': .868, 'y': .938}
        size: root.size
        text_size: self.width, self.height
        color: 1, 1, 1
        bold: True
        spacing: 3
        text: str(round(AmbonWidget.score))
        background_color: 0, 0, 0, 0
        canvas.before:
            Color:
                rgba: 1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .9
            RoundedRectangle:
                pos: root.width/1.3, root.height/1.15
                size: root.width/5, root.height/9

    Label:
        id: highscore_label
        pos_hint: {'x': .868, 'y': .878}
        size: root.size
        text_size: self.width, self.height
        color: 1, 1, 1, .6
        bold: True
        spacing: 3
        text: str(round(AmbonWidget.highscore))
        background_color:
    Label:
        id: wallet_label
        pos_hint: {'x': .868, 'y': .91}
        size: root.size
        text_size: self.width, self.height
        color: 1, 1, 1, 1
        bold: True
        spacing: 3
        text: (str(round(AmbonWidget.coins_total)))
        background_color:

    Image:
        id: coin_icon
        size_hint: .06, .06
        pos_hint: {'center_x': .82, 'center_y': .925}
        source: 'resources/icons/karucoins.png'

    Image:
        id: crown_icon
        size_hint: .055, .055
        pos_hint: {'center_x': .82, 'center_y': .893}
        source: 'resources/icons/crown.png'

    Label:
        id: origin_label
        text: ''
        color: 1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .9
        bold: True
        font_size: 52
        pos_hint: {'center_x': .5, 'center_y': .875}
    Image:
        id: image_widget
        source: AmbonWidget.current_image
        opacity: 0
        size_hint: .45, .35
        pos_hint: {'center_x': .5, 'center_y': .65}
        canvas.before:
            Color:
                rgba: 1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .9
            RoundedRectangle:
                size: root.width*.55, root.height*.35
                pos: self.x*.82, self.y

    Button: # Help Button
        id: help_button
        color: 0, 0, 0, 0
        background_color: 0, 0, 0, 0
        on_press: on_press: AmbonWidget.click_button()
        on_release: AmbonWidget.hint(); AmbonWidget.word_checker()
        disabled: True if help_amount.text=='0' else False
        size_hint: .17, .1
        pos_hint: {"center_x": .1, "center_y": .725}
        canvas.before:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: help_button.size
                pos: help_button.pos
                source: 'resources/icons/suggestion.png'
    Label:
        id: help_amount
        text: str(AmbonWidget.hints)
        color: [1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .9] if self.text!='0' else [1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .5]
        size: self.size
        font_size: 35
        pos_hint: {"center_x": .048, "center_y": .695}
        canvas.before:
            Color:
                rgba: (1, 1, 1, 1) if self.text!='0' else (.6, .6, .6, .75)
            Ellipse:
                size: 45, 45
                pos: help_button.x, help_button.y

    Button: # Sound Button
        id: sound_button
        color: 0, 0, 0, 0
        background_color: 0, 0, 0, 0
        clicked: 0
        disabled: True if sound_amount.text=='0' else False
        on_press: AmbonWidget.click_button()
        on_release:AmbonWidget.sound_used += 1; AmbonWidget.play_sound()
        size_hint: .15, .1
        pos_hint: {"center_x": .1225, "center_y": .575}
        canvas.before:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
                source: 'resources/icons/sound.png'
    Label:
        id: sound_amount
        text: str(AmbonWidget.sound_hint)
        color: [1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .9] if self.text!='0' else [1 - AmbonWidget.main_color[0], 1 - AmbonWidget.main_color[1], 1 - AmbonWidget.main_color[2], .5]
        size: self.size
        font_size: 35
        pos_hint: {"center_x": .048, "center_y": .56}
        canvas.before:
            Color:
                rgba: (1, 1, 1, 1) if self.text!='0' else (.6, .6, .6, .9) #
            Ellipse:
                size: 45, 45
                pos: help_button.x, help_button.y*.8

    Button:
        id: pass_button
        bold: True
        color: 1, 1, 1, 1
        background_color: 0, 0, 0, 0
        on_press: AmbonWidget.click_button()
        on_release: AmbonWidget.skip_level(); AmbonWidget.word_checker()
        size_hint: .12, .07
        pos_hint: {"center_x": .8875, "center_y": .65}
        canvas.before:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: (1, 1, 1, .8)
            RoundedRectangle:
                pos: self.x*1.02225, self.y*1.015
                size: self.width*.75, self.height*.75
                source: 'resources/icons/skip.png'

    GridLayout:
        rows: 3
        cols: 6
        spacing: 15, 30
        size_hint: .6, .25
        pos_hint:{"center_x":.5, "center_y":.2}

        LetterButton:
            id: letter_btn1
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 0; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn2
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 1; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn3
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 2; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn4
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 3; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn5
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 4; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn6
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 5; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn7
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 6; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn8
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 7; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn9
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 8; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn10
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 9; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn11
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 10; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn12
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 11; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn13
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 12; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn14
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 13; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn15
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 14; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn16
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 15; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn17
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 16; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()
        LetterButton:
            id: letter_btn18
            text:
            bold: True
            on_press: AmbonWidget.click_button(); AmbonWidget.i = 17; AmbonWidget.type_word()
            on_release: AmbonWidget.word_checker()

    Button:
        id: next_button
        on_press: AmbonWidget.click_button(); AmbonWidget.proceed()
        size_hint: .2, .075
        pos_hint:{"center_x":.5, "center_y":.225}
        color: (.0,.0,.0,.0) if self.disabled else (1,1,1,1)
        background_color: 0,0,0,0
        canvas.before:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                pos: self.pos
                size: self.size
            Color:
                rgba: (1, 1, 1, .8)
            RoundedRectangle:
                pos: self.x*1.13, self.y*1.075
                size: self.width*.5, self.height*.65
                source: 'resources/icons/next.png'
    Button:
        id: menupop
        on_press: AmbonWidget.click_button(); AmbonWidget.game_pause = True; AmbonWidget.pause_time(); Factory.PopupPause().open()
        on_release: print(AmbonWidget.game_pause)
        background_color: 0,0,0,0
        size_hint: .12, .07
        pos_hint:{"center_x":.1, "center_y":.95}
        canvas.before:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: menupop.size
                pos: menupop.pos
        canvas.after:
            Color:
                rgba: 1,1,1,.8
            RoundedRectangle:
                size: self.width*.65, self.height*.65
                pos: menupop.x*1.5, menupop.y*1.0125
                source: 'resources/icons/pause.png'
    Button:
        id: cd_label
        text: '3'
        font_size: 86
        bold: True
        background_color: 0, 0, 0, .3
        size: root.size
        pos: root.pos


<KaruStore>:
    name: "third"
    orientation: 'vertical'
    size: root.width, root.height
    secondary_color: .4,.4,.4,.8
    secondary_color2: (1.1 - root.main_color[0], 1.1 - root.main_color[1], 1.1 - root.main_color[2], .8)

    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size


    Button:
        text: 'Backgrounds'
        size_hint: .2, .12
        on_press: app.root.ids.gw.click_button()
        on_release: Factory.PopupBg().open()
        pos_hint: {"center_x":.5, "center_y":.75}
        background_color: 0, 0, 0, 0
        canvas:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: 1, 1, 1, 1
            RoundedRectangle:
                size: self.width/1.3, self.height/1.3
                pos: self.x*1.08, self.y*1.025
                source: 'resources/icons/theme.png'

    Button:
        text: 'Packs'
        size_hint: .2, .12
        on_press: app.root.ids.gw.click_button()
        on_release: Factory.PopupPacks().open()
        pos_hint: {"center_x":.5, "center_y":.6}
        background_color: 0, 0, 0, 0
        canvas:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: 1, 1, 1, 1
            RoundedRectangle:
                size: self.width/1.3, self.height/1.3
                pos: self.x*1.04, self.y*1.025
                source: 'resources/icons/categories.png'

    Button:
        text: 'Skins'
        size_hint: .2, .12
        on_press: app.root.ids.gw.click_button()
        on_release: Factory.PopupSkins().open()
        pos_hint: {"center_x":.5, "center_y":.45}
        background_color: 0, 0, 0, 0
        canvas:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: 1, 1, 1, 1
            RoundedRectangle:
                size: self.width/1.2, self.height/1.2
                pos: self.x*1.04, self.y*1.025
                source: 'resources/icons/skins.png'


    Button:
        text: "Menu"
        font_size: 32
        on_press: app.root.ids.gw.click_button()
        on_release: app.root.current = 'first'
        size_hint: .2, .12
        pos_hint: {"center_x":.5, "center_y":.25}
        background_color: 0, 0, 0, 0
        canvas:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: 1, 1, 1, 1
            RoundedRectangle:
                size: self.width/1.2, self.height/1.2
                pos: self.x*1.04, self.y*1.04
                source: 'resources/icons/home.png'

<SettingsScreen>:
    id: settings
    name: "fourth"
    orientation: 'vertical'
    size: root.width, root.height
    secondary_color: .4,.4,.4,.8
    secondary_color2: (1.1 - root.main_color[0], 1.1 - root.main_color[1], 1.1 - root.main_color[2], .8)
    canvas.before:
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            pos: self.pos
            size: self.size
    Label:
        id: origin_label
        text: data.language_names[data.origin_lang]
        font_size: 36
        bold: True
        color: 1, 0, 0
        pos_hint: {'center_x':.5, 'center_y':.875}
    ScrollView:
        pos_hint: {'center_x':.5, 'center_y':.8}
        size_hint: .75, .1
        do_scroll_x: True
        do_scroll_y: False
        canvas.before:
            Color:
                rgba: 1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1
            # Rectangle is the background
            RoundedRectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            id: boxlayout
            size_hint_x: None
            size_hint_y: .9
            width: root.width
            cols: 11
            rows: 1
            spacing: 20
            padding: 15, 35, 15 ,35
            ToggleButton:
                id: origin_ambon
                group: 'origins'
                language: "Ambonese"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/ambon.png'
            ToggleButton:
                id: origin_dutch
                group: 'origins'
                language: "Dutch"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/nl.png'
            ToggleButton:
                id: origin_english
                group: 'origins'
                language: "English"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/gb.png'
            ToggleButton:
                id: origin_german
                group: 'origins'
                language: "German"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/de.png'
            ToggleButton:
                id: origin_spanish
                group: 'origins'
                language: "Spanish"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/es.png'
            ToggleButton:
                id: origin_indonesian
                group: 'origins'
                language: "Indonesian"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/id.png'
            ToggleButton:
                id: origin_russian
                group: 'origins'
                language: "Russian"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/ru.png'
            ToggleButton:
                id: origin_french
                group: 'origins'
                language: "French"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/fr.png'
            ToggleButton:
                id: origin_korean
                group: 'origins'
                language: "Korean"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/kr.png'
            ToggleButton:
                id: origin_japanese
                group: 'origins'
                language: "Japanese"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/jp.png'
            ToggleButton:
                id: origin_italian
                group: 'origins'
                language: "Italian"
                on_press: origin_label.text = data.language_names[self.language]; settings.origin_lang = self.language; root.choose_origin()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/it.png'


    Label:
        id: dest_label
        text: data.language_names[data.dest_lang]
        font_size: 36
        font_name: 'SourceHanSansHW-Bold.otf'
        bold: True
        color: 1, 0, 0
        pos_hint: {'center_x':.5, 'center_y':.675}

    ScrollView:
        pos_hint: {'center_x':.5, 'center_y':.6}
        size_hint: .75, .1
        do_scroll_x: True
        do_scroll_y: False
        canvas.before:
            Color:
                rgba: 1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1
            # Rectangle is the background
            RoundedRectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            id: boxlayout2
            size_hint_x: None
            size_hint_y: .9
            width: root.width
            cols: 11
            rows: 1
            spacing: 20
            padding: 15, 35, 15 ,35
            ToggleButton:
                id: dest_ambon
                group: 'destinations'
                language: "Ambonese"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/ambon.png'
            ToggleButton:
                id: dest_dutch
                group: 'destinations'
                language: "Dutch"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/nl.png'
            ToggleButton:
                id: dest_english
                group: 'destinations'
                language: "English"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/gb.png'
            ToggleButton:
                id: dest_german
                group: 'destinations'
                language: "German"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .2
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/de.png'
            ToggleButton:
                id: dest_spanish
                group: 'destinations'
                language: "Spanish"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/es.png'
            ToggleButton:
                id: dest_indonesian
                group: 'destinations'
                language: "Indonesian"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/id.png'
            ToggleButton:
                id: dest_russian
                group: 'destinations'
                language: "Russian"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/ru.png'
            ToggleButton:
                id: dest_french
                group: 'destinations'
                language: "French"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/fr.png'
            ToggleButton:
                id: dest_korean
                group: 'destinations'
                language: "Korean"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/kr.png'
            ToggleButton:
                id: dest_japanese
                group: 'destinations'
                language: "Japanese"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/jp.png'
            ToggleButton:
                id: dest_italian
                group: 'destinations'
                language: "Italian"
                on_press: dest_label.text = data.language_names[self.language]; settings.dest_lang = self.language; root.choose_dest()
                size_hint: .1, .60
                background_color: 0, 0, 0, 0
                canvas.after:
                    Color:
                        rgba: (1, 1, 1, .25) if self.state=='down' else (1, 1, 1, 1)
                    Rectangle:
                        size: self.size
                        pos: self.pos
                        source: 'resources/icons/120x90/it.png'

    Button:
        text: "Menu"
        font_size: 32
        on_press: app.root.ids.gw.click_button()
        on_release: app.root.current = 'first'
        size_hint: .2, .12
        pos_hint: {"center_x":.5, "center_y":.25}
        background_color: 0, 0, 0, 0
        canvas:
            Color:
                rgba: [1 - root.main_color[0], 1 - root.main_color[1], 1 - root.main_color[2], 1] if self.state=='normal' else root.secondary_color2
            RoundedRectangle:
                size: self.size
                pos: self.pos
            Color:
                rgba: 1, 1, 1, 1
            RoundedRectangle:
                size: self.width/1.2, self.height/1.2
                pos: self.x*1.04, self.y*1.04
                source: 'resources/icons/home.png'